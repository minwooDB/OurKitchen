buildscript {
    ext.boot_version = "2.4.2"
    ext.querydsl_version = "4.4.0"

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$boot_version"
    }
}
plugins {
    id "org.springframework.boot" version "$boot_version"
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

springBoot {

    mainClass = "com.ourkitchen.OurkitchenApplication"

}

group = 'com.ourkitchen'
version = '0.0.1-SNAPSHOT'
archivesBaseName = "okWeb"

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

configurations {
	all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	implementation 'org.apache.commons:commons-lang3'
	// Querydsl
    implementation("com.querydsl:querydsl-core:${querydsl_version}")
    implementation("com.querydsl:querydsl-jpa:${querydsl_version}")
    implementation("com.querydsl:querydsl-apt:${querydsl_version}")
    
	compileOnly 'org.projectlombok:lombok'
	
	compile 'javax.validation:validation-api'
	compile 'org.springframework.boot:spring-boot-starter-log4j2'
	
	compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.4.2'
	compile group: 'com.zaxxer', name: 'HikariCP', version: '3.3.0'
	compileOnly 'org.projectlombok:lombok'
	
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok:1.18.16'
	
    annotationProcessor("com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa") // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor("jakarta.persistence:jakarta.persistence-api") // java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 대응
    annotationProcessor("jakarta.annotation:jakarta.annotation-api") // java.lang.NoClassDefFoundError (javax.annotation.Generated) 발생 대응
	
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

def generated="src/main/generated"

sourceSets {
    main {
        java {
            srcDir ( generated )
        }
    }
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}
clean.doLast {
    file(generated).deleteDir()
}

test {
	useJUnitPlatform()
}
